Lectures
########

.. _lectures:

Lectures
********

.. include:: def-contact.rst

* :ref:`devops`

* :ref:`pyrus`

----

.. _devops:

Model-Driven DevOps
===================

Lecturers: `Bernhard Steffen <http://ls5-www.cs.tu-dortmund.de/cms/de/mitarbeiter/prof/Bernhard_Steffen.html>`__ (TU Dortmund University)

.. raw:: html

   <br/>

   <div class="row">
     <div class="column40">

.. image:: /.static/rig.png
   :width: 80%
   :alt: Exemplary CI/CD Workflow Modeled in Rig
   :align: center

.. raw:: html

     </div>
     <div class="column60">

DevOps is a response to challenges that were raised by the growing popularity of agile software development and the advent of cloud infrastructure.
The accelerated rate of change requests and the increasing complexity of system architectures demand a closer cooperation between Development and Operations.
DevOps aims at bridging this gap, by involving experts from both sides and encouraging a continuous cross-functional cooperation.

This lecture, introduces our comprehensive approach how DevOps can evolve beyond "bridging the gap" and achieve a global and overarching alignment throughout all of the involved stakeholders.
Technical key to our approach is the concept of Language-Driven Engineering which allows one to integrate graphical domain-specific languages and the corresponding IDEs in a service-oriented fashion.
The interactive, workshop-style presentation of the tools and concepts is meant to

#. provide a tangible impression of the underlying CINCO Meta Tooling Framework for generating graphical domain-specific languages and the corresponding IDE, such as Rig, our DSL for CI/CD configuration,
#. let students experience the ease of graphical CI/CD configuration with Rig, and
#. provide a feeling the impact of automated DevOps support by discussing extensions, like, e.g., in the seamless integration of security measures in to the deployment process.


.. raw:: html

     </div>
   </div>

   <br/>

----

.. _pyrus:

Pyrus: A Collaborative Tool for Data Analytics
==============================================

Lecturers: `Bernhard Steffen <http://ls5-www.cs.tu-dortmund.de/cms/de/mitarbeiter/prof/Bernhard_Steffen.html>`__ (TU Dortmund University)

.. raw:: html

   <br/>

   <div class="row">
     <div class="column40">

.. image:: /.static/pyrus.png
   :width: 80%
   :alt: Pyrus
   :align: center

.. raw:: html

     </div>
     <div class="column60">

Pyrus is a novel, collaborative online modeling environment in which services and execution environments of external IDEs can be integrated in a service-oriented manner.
This allows functions created outside of Pyrus to be orchestrated and executed using a graphical domain-specific language (DSL).
Programmers and domain experts can collaborate in parallel in this way by supporting different mindsets with tailored and specific tools.
Pyrus addresses data-analysts by providing an established graphical language for data-driven process modeling.
The data-analytics functions can be implemented by the well known Jupyter online IDE using a corresponding interface.
Thanks to these integrated purpose-specific tools, programmers and domain experts can collaborate and benefit from each other.
Technically, Pyrus has been generated with the CINCO language workbench sketched in the lectures on continuous software development from declarative metamodel specifications.

Pyrus and, in particular, the benefits of collaboratively using the integrated Jupyter IDE¹, will be illustrated in an interactive, workshop-like fashion.
In a first step, predefined data analysis functions from Jupyter are synchronized with Pyrus to mo del a data-driven process for cluster analysis using K-Means.
Thanks to Jupyter's service-oriented integration, the created process can be executed directly in Pyrus to view the results.
Subsequently, additional face recognition functions will be created in Jupyter to demonstrate extensibility and parallel collaboration.
The new functions are automatically synchronized between Jupyter and Pyrus to extend the capabilities of the modeling environment.
In this way face recognition can be used by domain experts without leaving their mindset supporting environment.

Follow this link for detailed instructions: https://gitlab.com/scce/ml-process/-/wikis/STRESS-21-Pyrus

--- ¹ Jupyter is one of the most used tools for programming Python in the domain of data analytics, machine learning and AI.



.. raw:: html

     </div>
   </div>

   <br/>
